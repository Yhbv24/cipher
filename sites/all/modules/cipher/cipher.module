<?php

function cipher_menu() {
    $items = array();
    $items['cipher'] = array(
        'title' => 'Cipher',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('cipher_form'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items['cipher_success_page'] = array(
        'title' => 'Your Output',
        'page callback' => 'cipher_success',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    return $items;
}

function cipher_form() {
    $form['number'] = array(
        '#title' => 'Number of Spaces',
        '#type' => 'textfield',
        '#description' => t('Enter a number that corresponds to how many spaces you would like to shift.'),
        '#element_validate' => array('element_validate_integer_positive', 'element_validate_ascii'),
        '#required' => TRUE,
    );
    $form['direction'] = array(
        '#title' => 'Direction',
        '#type' => 'textfield',
        '#description' => t('Type left or right, depending on which direction you want to shift.'),
        // '#element_validate' => array('element_validate_left_right'),
        '#required' => TRUE,
    );
    $form['phrase'] = array(
        '#title' => 'Your Phrase',
        '#type' => 'textfield',
        '#description' => t('Enter the phrase you would like here.'),
        '#required' => TRUE,
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Cipher',
    );
    return $form;
}

// function element_validate_left_right($element) {
//     if ($element['#value'] != 'left' || $element['#value'] != 'right') {
//         form_error($element, t('You must enter either left or right.'));
//     }
// }

function element_validate_ascii($element) {
    if ($element['#value'] > 26 || $element['#value'] < 1) {
        form_error($element, t('Please enter a number between 1 and 26'));
    }
}

function cipher_form_submit($form, &$form_state) {
    $number = $form_state['values']['number'];
    $direction = $form_state['values']['direction'];
    $phrase = $form_state['values']['phrase'];
    $ascii_phrase = array();
    $ascii_output = array();
    $ascii_input = array();
    $output = array();

    for ($i = 0; $i < strlen($phrase); $i++) { // Turns input into an array of ASCII values
        array_push($ascii_phrase, ord($phrase[$i]));
    }

    foreach ($ascii_phrase as $letter) {
        switch($direction) {
            case 'left':
                if ($letter - $number < 97) {
                    $letter = 122 - $number;
                    array_push($ascii_input, $letter);
                } else {
                  $letter -= $number;
                  array_push($ascii_input, $letter);
                }
            break;
            case 'right':
                if ($letter + $number > 122) {
                    $letter = $number + 96;
                    array_push($ascii_input, $letter);
                } else {
                    $letter += $number;
                    array_push($ascii_input, $letter);
                }
            break;
        }
    }

    foreach ($ascii_input as $letter) {
        array_push($ascii_output, chr($letter));
    }

    $output = join('', $ascii_output);

    $_SESSION['cipher_input'] = $phrase;
    $_SESSION['cipher_output'] = $output;
    $form_state['redirect'] = 'cipher_success_page';
}

function cipher_success() {
    return '<h4>Your original phrase: ' . $_SESSION['cipher_input'] . '<br><br>' . 'Your coded phrase: ' . $_SESSION['cipher_output'] . '</h4>';
}
